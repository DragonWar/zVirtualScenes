<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                    xmlns:ei="clr-namespace:Microsoft.Expression.Interactivity.Core;assembly=Microsoft.Expression.Interactions">
    <DropShadowEffect x:Key="z-depth1" BlurRadius="5" ShadowDepth="1" Direction="270" Color="#CCCCCC"/>
    <DropShadowEffect x:Key="z-depth2" BlurRadius="8" ShadowDepth="2.5" Direction="270" Color="#BBBBBB"/>
    <DropShadowEffect x:Key="z-depth3" BlurRadius="14" ShadowDepth="4.5" Direction="270" Color="#BBBBBB"/>
    <DropShadowEffect x:Key="z-depth4" BlurRadius="25" ShadowDepth="8" Direction="270" Color="#BBBBBB"/>
    <DropShadowEffect x:Key="z-depth5" BlurRadius="35" ShadowDepth="13" Direction="270" Color="#BBBBBB"/>
    <Style x:Key="TextBoxMaterial" BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Foreground" Value="#3C3C3C"/>
        <Setter Property="BorderBrush" Value="#A7A7A7"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="FontFamily" Value="Roboto"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="bg" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer x:Name="PART_ContentHost" 
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="bg" Value="#1691F3"/>
                            <Setter Property="BorderThickness" TargetName="bg" Value="0 0 0 2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AnimatedSwitch" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="#FAFAFB" />
        <Setter Property="BorderBrush" Value="#EAEAEB" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Viewbox Stretch="Uniform">
                        <Canvas Name="Layer_1" Width="20" Height="20" Canvas.Left="10" Canvas.Top="0">
                            <Ellipse  Canvas.Left="0" Width="20" Height="20" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0.5"/>
                            <Ellipse  Canvas.Left="15" Width="20" Height="20" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0.5"/>
                            <Border Canvas.Left="10" Width="15" Height="20" Name="rect416927" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0.5,0,0.5"/>
                            <Ellipse x:Name="ellipse"  Canvas.Left="0" Width="20" Height="20" Fill="White" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0.3">
                                <Ellipse.RenderTransform>
                                    <TranslateTransform X="0" Y="0" />
                                </Ellipse.RenderTransform>
                                <Ellipse.BitmapEffect>
                                    <DropShadowBitmapEffect Softness="0.1" ShadowDepth="0.7" Direction="270" Color="#BBBBBB"/>
                                </Ellipse.BitmapEffect>
                            </Ellipse>
                        </Canvas>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True" >
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#52D468" Duration="0:0:0.2" />
                                        <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" To="#41C955" Duration="0:0:0.2" />
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ellipse">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="15" KeySpline="0, 1, 0.6, 1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#FAFAFB" Duration="0:0:0.2" />
                                        <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" To="#EAEAEB" Duration="0:0:0.2" />
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ellipse">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="15"/>
                                            <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0" KeySpline="0, 0.5, 0.5, 1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MaterialFloatingAction" TargetType="Button">
        <Setter Property="FontFamily" Value="Roboto" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Height" Value="48" />
        <Setter Property="Width" Value="48" />
        <Setter Property="FontSize" Value="30" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="#2196F3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Cursor="Hand" >
                        <Ellipse  Name="Ellipse" Fill="{TemplateBinding Background}" Effect="{StaticResource z-depth1}"  />
                        <TextBlock Foreground="{TemplateBinding Foreground}"
                                   FontSize="{TemplateBinding FontSize}" VerticalAlignment="Center" 
                                    HorizontalAlignment="Center" >
                             <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#1E88E5"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#DFDFDF"/>
                            <Setter Property="Foreground" Value="#A3A3A3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MaterialToolbarButton" TargetType="Button">
        <Setter Property="Height" Value="48" />
        <Setter Property="Width" Value="48" />
        <Setter Property="FontSize" Value="25" />
        <Setter Property="Foreground" Value="#6D6D6D" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Cursor="Hand" >
                        <Ellipse  Name="Ellipse" Fill="{TemplateBinding Background}"  />
                        <TextBlock Foreground="{TemplateBinding Foreground}" 
                                   FontSize="{TemplateBinding FontSize}" VerticalAlignment="Center" 
                                    HorizontalAlignment="Center" >
                             <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#DDDDDD"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#AFAFAF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MaterialLightButton" TargetType="Button">
        <Setter Property="FontFamily" Value="Roboto" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="#222222" />
        <Setter Property="Background" Value="#E0E0E0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid >
                        <Border Cursor="Hand" Effect="{DynamicResource z-depth1}" Background="{TemplateBinding Background}"
                                Height="36" CornerRadius="2" Padding="12 0" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#999999"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#DFDFDF"/>
                            <Setter Property="Foreground" Value="#A3A3A3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MaterialFlatButton" TargetType="Button">
        <Setter Property="FontFamily" Value="Roboto" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="#2199F9" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="PartBorder"  Cursor="Hand" Background="{TemplateBinding Background}" Height="36" Padding="12 0" BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#CCCCCC" TargetName="PartBorder"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#DDDDDD" TargetName="PartBorder"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#AFAFAF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalTabItem" TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="Transparent" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">

                    <Border x:Name="PART_Border" Background="{TemplateBinding Background}" BorderThickness="1" 
                            BorderBrush="LightGray" Margin="2" >
                        <ContentPresenter ContentSource="Header" Margin="2" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Border" Property="Background" Value="#FFF0F0F0" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="PART_Border" Property="Background" Value="#FFE6E6E6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ZvsFont" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="pack://application:,,,/fonts/flaticon" />
    </Style>
    <!--Devices-->
    <Color x:Key="DeviceColor">#42A5F5</Color>
    <Color x:Key="DeviceSelectedColor">#BBDEFB</Color>
    <Color x:Key="DeviceNoFocusColor">#E3F2FD</Color>
    <SolidColorBrush x:Key="DeviceBrush" Color="{DynamicResource DeviceColor}" />
    <SolidColorBrush x:Key="DeviceSelectedBrush" Color="{DynamicResource DeviceSelectedColor}" />
    <SolidColorBrush x:Key="DeviceNoFocusBrush" Color="{DynamicResource DeviceNoFocusColor}" />

    <Style x:Key="MaterialTabControl" TargetType="{x:Type TabControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <DockPanel>
                        <Grid DockPanel.Dock="Top"   >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="1"/>
                            </Grid.RowDefinitions>
                            <Border Grid.Row="1" Background="#FAFAFA"   Effect="{DynamicResource z-depth1}"/>
                            <Border Grid.Row="0" Background="#FAFAFA"  HorizontalAlignment="Stretch"  >
                                <TabPanel x:Name="HeaderPanel" HorizontalAlignment="Stretch"
                              Panel.ZIndex ="1" 
                              KeyboardNavigation.TabIndex="1"
                              IsItemsHost="true" />
                            </Border >
                        </Grid>
                        <ContentPresenter x:Name="PART_SelectedContentHost"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          Margin="{TemplateBinding Padding}"
                                          ContentSource="SelectedContent"/>

                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MaterialTabItem" TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border  Height="48" Width="120" x:Name="PART_Border" Cursor="Hand" BorderThickness="0 0 0 3" 
                            BorderBrush="#FAFAFA" 
                            Background="#FAFAFA"  >
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="TabText" FontSize="14" 
                                   FontFamily="Roboto" FontWeight="Medium" Foreground="#757575" Opacity=".60">
                            <ContentPresenter ContentSource="Header" />
                        </TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource DeviceSelectedBrush}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="#01BCD4" />
                            <Setter TargetName="TabText" Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--Scenes-->
    <Color x:Key="SceneColor">#66BB6A</Color>
    <Color x:Key="SceneSelectedColor">#C8E6C9</Color>
    <Color x:Key="SceneNoFocusColor">#E8F5E9</Color>
    <SolidColorBrush x:Key="SceneBrush" Color="{DynamicResource SceneColor}" />
    <SolidColorBrush x:Key="SceneSelectedBrush" Color="{DynamicResource SceneSelectedColor}" />
    <SolidColorBrush x:Key="SceneNoFocusBrush" Color="{DynamicResource SceneNoFocusColor}" />


    <!--Tiggers-->
    <Color x:Key="TriggerColor">#7E57C2</Color>
    <Color x:Key="TriggerSelectedColor">#D1C4E9</Color>
    <Color x:Key="TriggerNoFocusColor">#EDE7F6</Color>
    <SolidColorBrush x:Key="TriggerBrush" Color="{DynamicResource TriggerColor}" />
    <SolidColorBrush x:Key="TriggerSelectedBrush" Color="{DynamicResource TriggerSelectedColor}" />
    <SolidColorBrush x:Key="TriggerNoFocusBrush" Color="{DynamicResource TriggerNoFocusColor}" />


    <!--TASK-->
    <Color x:Key="TaskColor">#EF5350</Color>
    <Color x:Key="TaskSelectedColor">#FFCDD2</Color>
    <Color x:Key="TaskNoFocusColor">#FFEBEE</Color>
    <SolidColorBrush x:Key="TaskBrush" Color="{DynamicResource TaskColor}" />
    <SolidColorBrush x:Key="TaskSelectedBrush" Color="{DynamicResource TaskSelectedColor}" />
    <SolidColorBrush x:Key="TaskNoFocusBrush" Color="{DynamicResource TaskNoFocusColor}" />

    <!--groups-->
    <Color x:Key="GroupColor">#FFA726</Color>
    <Color x:Key="GroupSelectedColor">#FFE0B2</Color>
    <Color x:Key="GroupNoFocusColor">#FFF3E0</Color>
    <SolidColorBrush x:Key="GroupBrush" Color="{DynamicResource GroupColor}" />
    <SolidColorBrush x:Key="GroupSelectedBrush" Color="{DynamicResource GroupSelectedColor}" />
    <SolidColorBrush x:Key="GroupNoFocusBrush" Color="{DynamicResource GroupNoFocusColor}" />


    <!--Log-->
    <Color x:Key="LogColor">#26A69A</Color>
    <Color x:Key="LogSelectedColor">#B2DFDB</Color>
    <Color x:Key="LogNoFocusColor">#E0F2F1</Color>
    <SolidColorBrush x:Key="LogBrush" Color="{DynamicResource LogColor}" />
    <SolidColorBrush x:Key="LogSelectedBrush" Color="{DynamicResource LogSelectedColor}" />
    <SolidColorBrush x:Key="LogNoFocusBrush" Color="{DynamicResource LogNoFocusColor}" />


    <!--Settings-->
    <Color x:Key="SettingColor">#D4E157</Color>
    <!--400-->
    <Color x:Key="SettingSelectedColor">#F0F4C3</Color>
    <!--100-->
    <Color x:Key="SettingNoFocusColor">#F9FBE7</Color>
    <!--50-->
    <SolidColorBrush x:Key="SettingBrush" Color="{DynamicResource SettingColor}" />
    <SolidColorBrush x:Key="SettingSelectedBrush" Color="{DynamicResource SettingSelectedColor}" />
    <SolidColorBrush x:Key="SettingNoFocusBrush" Color="{DynamicResource SettingNoFocusColor}" />
    <Style x:Key="SettingTabItem" TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="PART_Border" BorderThickness="0" Width="120" Height="120" Effect="{StaticResource z-depth1}" Margin="5 10 0 0" BorderBrush="{DynamicResource SettingBrush}" Background="{DynamicResource SettingBrush}" CornerRadius="2">
                        <ContentPresenter ContentSource="Header" />

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource SettingSelectedBrush}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource SettingSelectedBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TransparentButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="MainGrid"  Background="Transparent">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Content" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainGrid" Property="Background" Value="#FFEFEFF2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NoSelectDataGridCell" TargetType="{x:Type DataGridCell}">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BodyContentDataGridCentering"
        TargetType="{x:Type DataGridCell}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BodyHozCenter"
        TargetType="{x:Type DataGridCell}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ZvsVerticalTabControl" TargetType="{x:Type TabControl}">
        <Setter Property="TabStripPlacement" Value="Left" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0"    />
        <Setter Property="Background" Value="White" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Name="ColumnDefinition0" />
                            <ColumnDefinition Width="0" Name="ColumnDefinition1" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" Name="RowDefinition0" />
                            <RowDefinition Height="*" Name="RowDefinition1" />
                        </Grid.RowDefinitions>

                        <Grid Name="ContentPanel" 
                          KeyboardNavigation.TabIndex="2" 
                          KeyboardNavigation.TabNavigation="Local" 
                          KeyboardNavigation.DirectionalNavigation="Contained" Margin="0 0 0 0"
                          Grid.Column="0" 
                          Grid.Row="1">

                            <ContentPresenter Content="{TemplateBinding SelectedContent}" 
                                              ContentTemplate="{TemplateBinding SelectedContentTemplate}" 
                                              ContentStringFormat="{TemplateBinding SelectedContentStringFormat}" 
                                              ContentSource="SelectedContent" 
                                              Name="PART_SelectedContentHost" 
                                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />

                        </Grid>
                        <Border x:Name="HeaderBorder" Grid.Row="0"  Grid.Column="0" >
                            <ScrollViewer VerticalScrollBarVisibility="Hidden" Padding="7 0" >
                                <TabPanel IsItemsHost="True"
                                  Name="HeaderPanel" 
                                  Panel.ZIndex="1" 
                                  KeyboardNavigation.TabIndex="1"/>
                            </ScrollViewer>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="Auto" />
                            <Setter TargetName="HeaderBorder" Property="FrameworkElement.Margin" Value="0,5,0,0" />
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement" Value="Left">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="Auto" />
                            <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="*" />
                            <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
                            <Setter TargetName="HeaderBorder" Property="FrameworkElement.Margin" Value="0,0,0,0" />
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement" Value="Right">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="*" />
                            <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="Auto" />
                            <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
                            <Setter TargetName="HeaderBorder" Property="FrameworkElement.Margin" Value="5,0,0,0" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalTabControl" TargetType="{x:Type TabControl}">
        <Setter Property="TabStripPlacement" Value="Left" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Padding" Value="2"    />
        <Setter Property="Background" Value="White" />


        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Name="ColumnDefinition0" />
                            <ColumnDefinition Width="0" Name="ColumnDefinition1" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" Name="RowDefinition0" />
                            <RowDefinition Height="*" Name="RowDefinition1" />
                        </Grid.RowDefinitions>

                        <Border x:Name="HeaderBorder" 
                            BorderBrush="LightGray" 
                            BorderThickness="1" 
                            CornerRadius="5" 
                            Background="#FAFAFA"
                            Margin="0,0,0,5">
                            <TabPanel IsItemsHost="True"
                                  Name="HeaderPanel" 
                                  Panel.ZIndex="1" 
                                  KeyboardNavigation.TabIndex="1"
                                  Grid.Column="0" 
                                  Grid.Row="0" 
                         />
                        </Border>

                        <Grid Name="ContentPanel" 
                          KeyboardNavigation.TabIndex="2" 
                          KeyboardNavigation.TabNavigation="Local" 
                          KeyboardNavigation.DirectionalNavigation="Contained" 
                          Grid.Column="0" 
                          Grid.Row="1">
                            <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5">
                                <ContentPresenter Content="{TemplateBinding SelectedContent}" 
                                              ContentTemplate="{TemplateBinding SelectedContentTemplate}" 
                                              ContentStringFormat="{TemplateBinding SelectedContentStringFormat}" 
                                              ContentSource="SelectedContent" 
                                              Name="PART_SelectedContentHost" 
                                              Margin="2" 
                                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" 
                            />
                            </Border>
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="Auto" />
                            <Setter TargetName="HeaderBorder" Property="FrameworkElement.Margin" Value="0,5,0,0" />
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement" Value="Left">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="Auto" />
                            <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="*" />
                            <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
                            <Setter TargetName="HeaderBorder" Property="FrameworkElement.Margin" Value="0,0,5,0" />
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement" Value="Right">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="*" />
                            <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="Auto" />
                            <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
                            <Setter TargetName="HeaderBorder" Property="FrameworkElement.Margin" Value="5,0,0,0" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>