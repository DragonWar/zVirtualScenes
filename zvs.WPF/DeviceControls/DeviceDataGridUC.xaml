<UserControl x:Class="zvs.WPF.DeviceControls.DeviceDataGridUc"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"  
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="1000" 
             xmlns:my="clr-namespace:zvs.DataModel;assembly=zvs.DataModel"
             xmlns:converters="clr-namespace:zvs.WPF.Converters"
             Loaded="UserControl_Loaded" 
             Initialized="UserControl_Initialized"
           Unloaded="UserControl_Unloaded_1" FontFamily="Roboto" >
    <UserControl.Resources>
        <CollectionViewSource x:Key="devicesViewSource" d:DesignSource="{d:DesignInstance my:Device, CreateList=True}"/>
        <converters:IsNewItemPlaceholderConverter x:Key="IsNewItemPlaceholderConverter"/>
    </UserControl.Resources>
    <Border Effect="{DynamicResource z-depth2}"  CornerRadius="2" DataContext="{StaticResource devicesViewSource}">
        <Grid  >
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="60"/>
            </Grid.RowDefinitions>
            <DataGrid  x:Name="DeviceGrid" Background="#FAFAFA" RowBackground="#FAFAFA" AlternatingRowBackground="#FAFAFA" 
                  CellStyle="{StaticResource BodyContentDataGridCentering}" CanUserDeleteRows="False"
                  HorizontalGridLinesBrush="{DynamicResource DeviceNoFocusBrush}"  
                   GridLinesVisibility="Horizontal" RowHeight="55" CanUserAddRows="False" AutoGenerateColumns="False" 
                  ItemsSource="{Binding}" PreviewMouseLeftButtonDown="DeviceGrid_PreviewMouseLeftButtonDown" 
                  RowEditEnding="DeviceGrid_RowEditEnding" 
                  RowHeaderWidth="0" AllowDrop="False" BorderThickness="0 0 0 0" FontFamily="zVirtualScenes">
                <DataGrid.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{DynamicResource DeviceSelectedColor}"/>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black"/>
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey }" Color="{DynamicResource DeviceNoFocusColor}" />
                    <Style x:Key="NoSelectionDataGridHeader" TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Foreground"  Value="#FEFEFE" />
                        <Setter Property="Background"  Value="{DynamicResource DeviceBrush}" />
                        <Setter Property="BorderBrush"  Value="{DynamicResource DeviceSelectedBrush}" />
                        <Setter Property="BorderThickness"  Value="0 0 0 1" />
                        <Setter Property="FontSize"  Value="20" />
                        <Setter Property="FontWeight"  Value="Medium" />
                        <Setter Property="Padding"  Value="8" />
                        <Setter Property="Height"  Value="60" />
                    </Style>
                    <Style x:Key="SelectionDataGridHeader" TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Foreground"  Value="#FEFEFE" />
                        <Setter Property="Background"  Value="{DynamicResource DeviceBrush}" />
                        <Setter Property="BorderBrush"  Value="{DynamicResource DeviceSelectedBrush}" />
                        <Setter Property="BorderThickness"  Value="0 0 0 1" />
                        <Setter Property="FontSize"  Value="20" />
                        <Setter Property="FontWeight"  Value="Medium" />
                        <Setter Property="Cursor" Value="Hand" />
                        <Setter Property="Padding"  Value="8" />
                        <Setter Property="Height"  Value="60" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background"  Value="{DynamicResource DeviceSelectedBrush}" />
                            </Trigger>
                            <Trigger Property="SortDirection" Value="Ascending">
                                <Setter Property="FontWeight"  Value="Medium" />
                            </Trigger>
                            <Trigger Property="SortDirection" Value="Descending">
                                <Setter Property="FontWeight"  Value="Medium" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTextColumn x:Name="NodeID" HeaderStyle="{StaticResource SelectionDataGridHeader}"   CellStyle="{StaticResource BodyHozCenter}"  MinWidth="50"  Width="25" Header="Id" Binding="{Binding NodeNumber}" IsReadOnly="True" 
                                    CanUserResize="False" CanUserReorder="True"  FontSize="14" Foreground="#B2B2B2" FontFamily="zVirtualScenes"/>
                    <DataGridTemplateColumn HeaderStyle="{StaticResource NoSelectionDataGridHeader}" SortMemberPath="Type.Name"  MaxWidth="70" MinWidth="70" Width="70" 
                                        Header="" CanUserResize="False" CanUserReorder="False">
                        <DataGridTemplateColumn.CellTemplate >
                            <DataTemplate>
                                <Grid Height="40" Width="40">
                                    <Ellipse  Name="Ellipse" Fill="#B2B2B2"/>
                                    <TextBlock Name="imgFont" Text="&#xe006;" Style="{DynamicResource ZvsFont}"  FontFamily="zVirtualScenes" Foreground="White" 
                                           FontSize="25" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                </Grid>

                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding Path=Type.UniqueIdentifier, UpdateSourceTrigger=PropertyChanged}" Value="Unknown">
                                        <Setter TargetName="imgFont" Property="Text" Value="&#xe006;"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=Type.UniqueIdentifier, UpdateSourceTrigger=PropertyChanged}" Value="Thermostat">
                                        <Setter TargetName="imgFont" Property="Text" Value="&#xe00a;"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=Type.UniqueIdentifier, UpdateSourceTrigger=PropertyChanged}" Value="Dimmer">
                                        <Setter TargetName="imgFont" Property="Text" Value="&#xe004;"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=Type.UniqueIdentifier, UpdateSourceTrigger=PropertyChanged}" Value="Switch">
                                        <Setter TargetName="imgFont" Property="Text" Value="&#xe009;"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=Type.UniqueIdentifier, UpdateSourceTrigger=PropertyChanged}" Value="Controller">
                                        <Setter TargetName="imgFont" Property="Text" Value="&#xe000;"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=Type.UniqueIdentifier, UpdateSourceTrigger=PropertyChanged}" Value="Doorlock">
                                        <Setter TargetName="imgFont" Property="Text" Value="&#xe003;"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=Type.UniqueIdentifier, UpdateSourceTrigger=PropertyChanged}" Value="Sensor">
                                        <Setter TargetName="imgFont" Property="Text" Value="&#xe1a0;"/>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTextColumn HeaderStyle="{StaticResource SelectionDataGridHeader}" FontSize="16" MinWidth="100" Width="*" Header="Name"
                                    Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged, FallbackValue=Device Name}" IsReadOnly="False"  >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                <Setter Property="Padding" Value="8" />
                                <Setter Property="Foreground" Value="#181818"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn MinWidth="100" Width="*" HeaderStyle="{StaticResource SelectionDataGridHeader}" Header="Location" FontSize="16" 
                                    Binding="{Binding Location, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False"   >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                <Setter Property="Padding" Value="8" />
                                <Setter Property="Foreground" Value="#181818"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn  HeaderStyle="{StaticResource SelectionDataGridHeader}" x:Name="DeviceTypeCol" CellStyle="{StaticResource BodyContentDataGridCentering}" 
                                     Width="200" MinWidth="50" Header="Type"
                                    Binding="{Binding Path=Type.Name}" FontSize="16" IsReadOnly="True" FontFamily="zVirtualScenes" >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                <Setter Property="Padding" Value="8" />
                                <Setter Property="Foreground" Value="#B2B2B2"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <DataGridTemplateColumn x:Name="GroupCol" HeaderStyle="{StaticResource NoSelectionDataGridHeader}" MinWidth="100" Header="Groups" 
                                        CanUserResize="True">

                        <DataGridTemplateColumn.CellTemplate >

                            <DataTemplate>

                                <ComboBox x:Name="GroupsCmbBox" Style="{StaticResource ComboBoxMaterialStyle}" Padding="8" ItemsSource="{Binding Path=Groups}" SelectedIndex="0" Margin="5,0" FontFamily="zVirtualScenes">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=Name}"/>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ComboBox>

                                <DataTemplate.Triggers>

                                    <DataTrigger Binding="{Binding Path=Groups.Count}" Value="0">
                                        <Setter TargetName="GroupsCmbBox" Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>

                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn HeaderStyle="{StaticResource SelectionDataGridHeader}" x:Name="LevelCol" Header="Status" Width="170" CanUserResize="True" 
                                        CanUserSort="True" SortMemberPath="CurrentLevelInt" IsReadOnly="True" >
                        <DataGridTemplateColumn.CellTemplate >
                            <DataTemplate>
                                <Grid Margin="5,0" HorizontalAlignment="Left">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="90"></ColumnDefinition>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <ProgressBar  Name="LevelProgressBr" Foreground="#757575" Value="{Binding CurrentLevelInt}" Height="10" Opacity="6" Margin="0 2 7 0" />
                                    <TextBlock Grid.Column="1" Name="LevelTxtBlock" Text="{Binding CurrentLevelText, NotifyOnTargetUpdated=True}" Background="Transparent"
                                           Foreground="#B2B2B2" FontSize="16" VerticalAlignment="Center" TextAlignment="Center" >
                                        <TextBlock.Triggers>
                                            <EventTrigger RoutedEvent="Binding.TargetUpdated">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBlock.Background).(SolidColorBrush.Color)" Duration="0:0:0" To="LightBlue" />
                                                        <ColorAnimation Storyboard.TargetProperty="(TextBlock.Background).(SolidColorBrush.Color)" Duration="0:0:0.5" From="LightBlue" To="Transparent" BeginTime="0:0:0.3" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </TextBlock.Triggers>
                                    </TextBlock>
                                </Grid>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding Path=Type.UniqueIdentifier}" Value="Thermostat">
                                        <Setter TargetName="LevelProgressBr" Property="Foreground" Value="#448AFF"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=Type.UniqueIdentifier}" Value="Controller">
                                        <Setter TargetName="LevelProgressBr" Property="Visibility" Value="Collapsed"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=Type.UniqueIdentifier}" Value="Doorlock">
                                        <Setter TargetName="LevelProgressBr" Property="Visibility" Value="Collapsed"></Setter>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

               
                </DataGrid.Columns>
            </DataGrid>
            <Border Grid.Row="1" Margin="0">
                <Grid Background="#EEEEEE" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"  />
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0" Orientation="Vertical" VerticalAlignment="Center">
                        <TextBlock Text="Filter"  HorizontalAlignment="Left" Margin="10 0 0 0" FontSize="12" Foreground="#A2A2A2" />
                        <TextBox Style="{DynamicResource TextBoxMaterial}" Name="Filter" HorizontalAlignment="Left" 
                              Width="150" 
                             TextChanged="Filter_TextChanged_1" 
                             Margin="10 0 0 0" FontSize="16"  ></TextBox>
                    </StackPanel>

                    <StackPanel Grid.Column="1" Orientation="Vertical" VerticalAlignment="Center" >
                        <TextBlock Text="Show More"  HorizontalAlignment="Left" Margin="10 0 0 0" FontSize="12" Foreground="#A2A2A2" />
                        <ToggleButton Cursor="Hand"  Style="{StaticResource AnimatedSwitch}" Height="25" Name="ShowMoreBtn" HorizontalAlignment="Left"  
                              VerticalAlignment="Center" Checked="ShowMoreBtn_Checked_1" Foreground="#B2B2B2"  FontSize="16"  
                          Unchecked="ShowMoreBtn_Unchecked_1"  IsChecked="False" Content="More Details"  Margin="10,5,0,0" />
                    </StackPanel>
                    <Grid Grid.Column="2"  HorizontalAlignment="Right" Margin="0 0 25 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Button Margin="0 0 10 0"  
                             Content="&#xe01d;" FontFamily="zVirtualScenes"
                             Click="ButtonOn_OnClick"
                            ToolTip="Turn-on">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialToolbarButton}">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=DeviceGrid, Path=SelectedItem.Type.UniqueIdentifier}" Value="Switch">
                                            <Setter Property="IsEnabled" Value="True" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=DeviceGrid, Path=SelectedItem.Type.UniqueIdentifier}" Value="Dimmer">
                                            <Setter Property="IsEnabled" Value="True" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button Grid.Column="1" Margin="0 0 10 0"  
                               Content="&#xe01e;" FontFamily="zVirtualScenes"
                            Click="ButtonOff_OnClick"
                            ToolTip="Turn-off">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialToolbarButton}">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=DeviceGrid, Path=SelectedItem.Type.UniqueIdentifier}" Value="Switch">
                                            <Setter Property="IsEnabled" Value="True" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=DeviceGrid, Path=SelectedItem.Type.UniqueIdentifier}" Value="Dimmer">
                                            <Setter Property="IsEnabled" Value="True" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button Grid.Column="2" 
                            Content="&#xe01a;" FontFamily="zVirtualScenes"
                            Click="ButtonDeleteDevice_OnClick"
                            ToolTip="Delete Device">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialToolbarButton}">
                                    <Setter Property="IsEnabled" Value="True" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=DeviceGrid, Path=SelectedItem}" Value="{x:Null}">
                                            <!--Comment the following line out to view in editor {x:Null}-->
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=DeviceGrid, Path=SelectedItem, Converter={StaticResource IsNewItemPlaceholderConverter}}" Value="True">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button  Grid.Column="3" Margin="10 0 0 0" 
                           Content="&#xe01f;" FontFamily="zVirtualScenes"
                            Click="SettingBtn_Click_1" 
                            ToolTip="Device Settings">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialToolbarButton}">
                                    <Setter Property="IsEnabled" Value="True" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=DeviceGrid, Path=SelectedItem}" Value="{x:Null}">
                                            <!--Comment the following line out to view in editor {x:Null}-->
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=DeviceGrid, Path=SelectedItem, Converter={StaticResource IsNewItemPlaceholderConverter}}" Value="True">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </Grid>

                </Grid>
            </Border>
        </Grid>
    </Border>
</UserControl>

