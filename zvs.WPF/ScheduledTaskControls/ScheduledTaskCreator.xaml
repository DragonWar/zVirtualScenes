<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
            x:Class="zvs.WPF.ScheduledTaskControls.ScheduledTaskCreator"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:dataModel="clr-namespace:zvs.DataModel;assembly=zvs.DataModel"
             xmlns:tasks="clr-namespace:zvs.DataModel.Tasks;assembly=zvs.DataModel"
             xmlns:converters="clr-namespace:zvs.WPF.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="934.025" d:DesignWidth="1037" Loaded="UserControl_Loaded_1" Unloaded="ScheduledTaskCreator_Unloaded_1" 
    Initialized="UserControl_Initialized" FontFamily="Roboto">
    <UserControl.Resources>
        <Style x:Key="NoSelectionDataGridHeader" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Foreground"  Value="White" />
            <Setter Property="Background"  Value="{DynamicResource TaskBrush}" />
            <Setter Property="BorderBrush"  Value="{DynamicResource TaskSelectedBrush}" />
            <Setter Property="BorderThickness"  Value="0 0 0 1" />
            <Setter Property="FontSize"  Value="20" />
            <Setter Property="FontWeight"  Value="Medium" />
            <Setter Property="Padding"  Value="8" />
            <Setter Property="Height"  Value="60" />
        </Style>
        <Style x:Key="SelectionDataGridHeader" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Foreground"  Value="White" />
            <Setter Property="Background"  Value="{DynamicResource TaskBrush}" />
            <Setter Property="BorderBrush"  Value="{DynamicResource TaskSelectedBrush}" />
            <Setter Property="BorderThickness"  Value="0 0 0 1" />
            <Setter Property="FontSize"  Value="20" />
            <Setter Property="FontWeight"  Value="Medium" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Padding"  Value="8" />
            <Setter Property="Height"  Value="60" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background"  Value="{DynamicResource TaskSelectedBrush}" />
                </Trigger>
                <Trigger Property="SortDirection" Value="Ascending">
                    <Setter Property="FontWeight"  Value="Medium" />
                </Trigger>
                <Trigger Property="SortDirection" Value="Descending">
                    <Setter Property="FontWeight"  Value="Medium" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <converters:IsNewItemPlaceholderConverter x:Key="IsNewItemPlaceholderConverter"/>
        <ObjectDataProvider x:Key="ScheduledTaskTypeEnum" MethodName="GetValues" ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="tasks:ScheduledTaskType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <CollectionViewSource x:Key="ScheduledTaskViewSource" d:DesignSource="{d:DesignInstance {x:Type dataModel:ZvsScheduledTask}, CreateList=True}"/>
    </UserControl.Resources>

    <Grid DataContext="{StaticResource ScheduledTaskViewSource}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="400"/>
                <ColumnDefinition Width="15"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Border Grid.Column="0"  Background="#EEEEEE" BorderThickness="0" CornerRadius="2" Effect="{DynamicResource z-depth2}">
               
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="60"/>
                    </Grid.RowDefinitions>
                    <DataGrid x:Name="ScheduledTaskDataGrid" ItemsSource="{Binding}" BorderThickness="0" Background="#FAFAFA" CanUserDeleteRows="False"
                              RowBackground="#FAFAFA" AlternatingRowBackground="#FAFAFA" AllowDrop="False" BorderBrush="{DynamicResource TaskBrush}"
                              HorizontalGridLinesBrush="{DynamicResource TaskNoFocusBrush}" GridLinesVisibility="Horizontal"  HorizontalAlignment="Left" 
                              RowHeight="55" AutoGenerateColumns="False"  CellStyle="{StaticResource BodyContentDataGridCentering}" SelectionMode="Single" 
                              RowHeaderWidth="0" SelectionChanged="ScheduledTaskDataGrid_SelectionChanged" RowEditEnding="ScheduledTaskDataGrid_RowEditEnding_1" >
                        <DataGrid.Resources>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{DynamicResource TaskSelectedColor}"/>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black"/>
                            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey }" Color="{DynamicResource TaskNoFocusColor}" />
                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <DataGridTemplateColumn HeaderStyle="{StaticResource NoSelectionDataGridHeader}" Header="" MaxWidth="70" MinWidth="70" Width="70" 
                                                    CanUserResize="False" CanUserReorder="False" CanUserSort="False">
                                <DataGridTemplateColumn.CellTemplate >
                                    <DataTemplate>
                                        <Grid Height="40" Width="40">
                                            <Ellipse  Name="Ellipse" Fill="#B2B2B2"/>
                                            <TextBlock Name="imgFont" Text="&#xe008;" FontFamily="flaticon" Foreground="White" 
                                           FontSize="22" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTextColumn HeaderStyle="{StaticResource SelectionDataGridHeader}" Width="*" MinWidth="50" FontSize="16" Header="Scheduled Task" Binding="{Binding Path=Name, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False"  CanUserReorder="False" CanUserSort="True">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <DataGridCheckBoxColumn HeaderStyle="{StaticResource SelectionDataGridHeader}" Header="Enabled" MinWidth="90" Width="90"  IsReadOnly="False" 
                                                    CellStyle="{StaticResource BodyHozCenter}" Binding="{Binding IsEnabled, UpdateSourceTrigger=PropertyChanged }" >
                            </DataGridCheckBoxColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid Grid.Row="1"  Background="#EEEEEE" >
                        <Button Grid.Column="0" Margin="10 0 10 0" HorizontalAlignment="Right" 
                            Height="40" 
                            Width="40"
                            Content="3"
                            FontFamily="Wingdings 2"
                            Click="ButtonDelete_OnClick"
                            ToolTip="Delete Task">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialToolbarButton}">
                                    <Setter Property="IsEnabled" Value="True" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=ScheduledTaskDataGrid, Path=SelectedItem}" Value="{x:Null}">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=ScheduledTaskDataGrid, Path=SelectedItem, Converter={StaticResource IsNewItemPlaceholderConverter}}" Value="True">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </Grid>
                </Grid>
            </Border>
            <Border Name="TaskDetails" Grid.Column="2" Background="#FAFAFA" BorderThickness="0" CornerRadius="2" Effect="{DynamicResource z-depth2}" LostFocus="TaskUserControlGrid_OnLostFocus">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Visibility" Value="Visible" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedItem, ElementName=ScheduledTaskDataGrid, Converter={StaticResource IsNewItemPlaceholderConverter}}" Value="True">
                                <Setter Property="Visibility" Value="Hidden" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding SelectedItems.Count, ElementName=ScheduledTaskDataGrid}" Value="0">
                                <Setter Property="Visibility" Value="Hidden" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="60"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid Background="{DynamicResource TaskBrush}"  >
                        <Image Name="SignalImg" Source="../Images/send_signal.png" Height="15" Margin="0 0 10 0" VerticalAlignment="Center"
                                   HorizontalAlignment="Right" Opacity="0"></Image>
                        <TextBlock  FontSize="20" Margin="8 0 25 0" FontWeight="Medium"  Foreground="#FEFEFE" Padding="8" VerticalAlignment="Center" 
                                            TextTrimming="CharacterEllipsis" TextWrapping="Wrap" Text="{Binding Name, StringFormat={}{0} Details, FallbackValue=New Task}"/>
                    </Grid>
                    <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" >
                        <StackPanel Orientation="Vertical" >
                            <TextBlock Text="Task Frequency" Margin="10 15 0 0" HorizontalAlignment="Left" FontSize="12" Foreground="#A2A2A2" />
                            <ComboBox Name="FrequencyCmbBx" ItemsSource="{Binding Source={StaticResource ScheduledTaskTypeEnum}}" Margin="10 5 0 0" 
                                      HorizontalAlignment="Left" Width="176" SelectionChanged="FrequencyCmbBx_SelectionChanged" FontSize="14" 
                                       Background="#FFCCCCCC" ></ComboBox>
                            <TextBlock Text="Command to Run" Margin="10 15 0 0" HorizontalAlignment="Left" FontSize="12" Foreground="#A2A2A2" />
                            <StackPanel Orientation="Horizontal" Margin="10 5 0 0">
                                <Button x:Name="AddUpdateCommand" HorizontalAlignment="Left" Content="SELECT COMMAND"  
                                        Click="AddUpdateCommand_Click" Style="{DynamicResource MaterialFlatButton}"/>

                                <TextBlock FontSize="14" Margin="10 0 0 0" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" >
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} {1}"  >
                                            <Binding Path="Description" FallbackValue="Unknow" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" />
                                            <Binding Path="TargetObjectName" FallbackValue="Unknown" Mode="OneWay" UpdateSourceTrigger="PropertyChanged"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </StackPanel>
                            <Grid  Name="TaskUserControlGrid" LostFocus="TaskUserControlGrid_OnLostFocus" Margin="0 15 0 0" ></Grid>
                        </StackPanel>
                    </ScrollViewer>
                </Grid>
            </Border>


        </Grid>
    </Grid>
</UserControl>
