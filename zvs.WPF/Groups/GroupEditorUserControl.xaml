<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:dataModel="clr-namespace:zvs.DataModel;assembly=zvs.DataModel"
    xmlns:converters="clr-namespace:zvs.WPF.Converters"
    x:Class="zvs.WPF.Groups.GroupEditorUserControl" 
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="700" Loaded="GroupEditorUserControl_OnLoaded" Unloaded="GroupEditorUserControl_OnUnloaded" FontFamily="Roboto">
    <UserControl.Resources>
        <converters:IsNewItemPlaceholderConverter x:Key="IsNewItemPlaceholderConverter"/>
        <CollectionViewSource x:Key="GroupsViewSource" d:DesignSource="{d:DesignInstance {x:Type dataModel:Group}, CreateList=True}" />
        <CollectionViewSource x:Key="Groupsgroup_devicesViewSource" Source="{Binding Devices, Source={StaticResource GroupsViewSource}}" />
    </UserControl.Resources>
    <Grid DataContext="{StaticResource GroupsViewSource}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="400" />
            <ColumnDefinition Width="15"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Border Grid.Column="0"  Background="#EEEEEE" BorderThickness="0" CornerRadius="2" Effect="{DynamicResource z-depth2}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="60"/>
                </Grid.RowDefinitions>
                <DataGrid x:Name="GroupsDataGrid" ItemsSource="{Binding}" BorderThickness="0" Background="#FAFAFA" CanUserDeleteRows="False"
                            RowBackground="#FAFAFA" AlternatingRowBackground="#FAFAFA" AllowDrop="False" BorderBrush="{DynamicResource GroupBrush}"
                            HorizontalGridLinesBrush="{DynamicResource GroupNoFocusBrush}"  GridLinesVisibility="Horizontal"  HorizontalAlignment="Left" 
                            RowHeight="55" AutoGenerateColumns="False" CellStyle="{StaticResource BodyContentDataGridCentering}" SelectionMode="Single" 
                            RowHeaderWidth="0" RowEditEnding="GroupsDataGrid_OnRowEditEnding">
                    <DataGrid.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{DynamicResource GroupSelectedColor}"/>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black"/>
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey }" Color="{DynamicResource GroupNoFocusColor}" />
                        <Style x:Key="NoSelectionDataGridHeader" TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="Foreground"  Value="White" />
                            <Setter Property="Background"  Value="{DynamicResource GroupBrush}" />
                            <Setter Property="BorderBrush"  Value="{DynamicResource GroupSelectedBrush}" />
                            <Setter Property="BorderThickness"  Value="0 0 0 1" />
                            <Setter Property="FontSize"  Value="20" />
                            <Setter Property="FontWeight"  Value="Medium" />
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter Property="Padding"  Value="8" />
                            <Setter Property="Height"  Value="60" />
                        </Style>
                        <Style x:Key="SelectionDataGridHeader" TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="Foreground"  Value="White" />
                            <Setter Property="Background"  Value="{DynamicResource GroupBrush}" />
                            <Setter Property="BorderBrush"  Value="{DynamicResource GroupSelectedBrush}" />
                            <Setter Property="BorderThickness"  Value="0 0 0 1" />
                            <Setter Property="FontSize"  Value="20" />
                            <Setter Property="FontWeight"  Value="Medium" />
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter Property="Padding"  Value="8" />
                            <Setter Property="Height"  Value="60" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background"  Value="{DynamicResource GroupSelectedBrush}" />
                                </Trigger>
                                <Trigger Property="SortDirection" Value="Ascending">
                                    <Setter Property="FontWeight"  Value="Medium" />
                                </Trigger>
                                <Trigger Property="SortDirection" Value="Descending">
                                    <Setter Property="FontWeight"  Value="Medium" />
                                </Trigger>
                            </Style.Triggers>


                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTemplateColumn HeaderStyle="{StaticResource NoSelectionDataGridHeader}" MaxWidth="50" MinWidth="50" Width="50"  Header="" CanUserResize="False" CanUserReorder="False" CanUserSort="False">
                            <DataGridTemplateColumn.CellTemplate >
                                <DataTemplate>
                                    <Grid Height="40" Width="40">
                                        <Ellipse  Name="Ellipse" Fill="#B2B2B2"/>
                                        <TextBlock Name="imgFont" Text="&#xe00c;" FontFamily="flaticon" Foreground="White" FontSize="22" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTextColumn HeaderStyle="{StaticResource SelectionDataGridHeader}" Width="*" MinWidth="50" FontSize="16" Header="Groups" Binding="{Binding Path=Name, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False"  CanUserReorder="False" CanUserSort="True">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
                <Grid Grid.Row="1" HorizontalAlignment="Right">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Button Margin="0 0 10 0"  
                            Content="On"
                            FontFamily="flaticon"
                             Click="TurnOnButton_OnClick"
                            ToolTip="Turn-on Group"> 
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialToolbarButton}">
                                <Setter Property="IsEnabled" Value="True" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=GroupsDataGrid, Path=SelectedItem}" Value="{x:Null}">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=GroupsDataGrid, Path=SelectedItem.Devices.Count}" Value="0">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=GroupsDataGrid, Path=SelectedItem, Converter={StaticResource IsNewItemPlaceholderConverter}}" Value="True">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Grid.Column="1" Margin="0 0 10 0"  
                            Content="Off"
                            FontFamily="flaticon"
                            Click="TurnOffButton_OnClick"
                            ToolTip="Turn-off Group">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialToolbarButton}">
                                <Setter Property="IsEnabled" Value="True" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=GroupsDataGrid, Path=SelectedItem}" Value="{x:Null}">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=GroupsDataGrid, Path=SelectedItem.Devices.Count}" Value="0">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=GroupsDataGrid, Path=SelectedItem, Converter={StaticResource IsNewItemPlaceholderConverter}}" Value="True">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Grid.Column="2" Margin="0 0 10 0" 
                            Content="3"
                            FontFamily="Wingdings 2"
                            Click="ButtonDelete_OnClick"
                            ToolTip="Delete Group">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialToolbarButton}">
                                <Setter Property="IsEnabled" Value="True" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=GroupsDataGrid, Path=SelectedItem}" Value="{x:Null}">
                                        <!--Comment the following line out to view in editor {x:Null}-->
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=GroupsDataGrid, Path=SelectedItem, Converter={StaticResource IsNewItemPlaceholderConverter}}" Value="True">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
            </Grid>
        </Border>
        <Border Grid.Column="2" Background="#EEEEEE" BorderThickness="0" CornerRadius="2" Effect="{DynamicResource z-depth2}">
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="Visibility" Value="Visible" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SelectedItem, ElementName=GroupsDataGrid, Converter={StaticResource IsNewItemPlaceholderConverter}}" Value="True">
                            <Setter Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding SelectedItems.Count, ElementName=GroupsDataGrid}" Value="0">
                            <Setter Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="60"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="60"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" Background="{DynamicResource GroupBrush}"  >
                    <Image Name="SignalImg" Source="../Images/send_signal.png" Height="15" Margin="0 0 10 0" VerticalAlignment="Center"
                                   HorizontalAlignment="Right" Opacity="0"></Image>
                    <TextBlock  FontSize="20" Margin="8 0 25 0" FontWeight="Medium"  Foreground="#FEFEFE" Padding="8" VerticalAlignment="Center" 
                                            TextTrimming="CharacterEllipsis" TextWrapping="Wrap" Text="{Binding Name, StringFormat={}{0} Details}"/>
                </Grid>
                <ListView Grid.Row="1" FontSize="14" x:Name="GroupsDevicesLstVw" ItemsSource="{Binding Source={StaticResource Groupsgroup_devicesViewSource}}" AllowDrop="False" Background="#FAFAFA" >
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock>
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0} {1}">
                                        <Binding Path="Location" />
                                        <Binding Path="Name" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListView>
                <Grid Grid.Row="2"  HorizontalAlignment="Right">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0" Margin="0 0 10 0" 
                            Content="-"
                            FontFamily="Roboto"
                            Click="ButtonRemoveDevice_OnClick"
                            ToolTip="Remove Device">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialToolbarButton}">
                                <Setter Property="IsEnabled" Value="True" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=GroupsDataGrid, Path=SelectedItem}" Value="{x:Null}">
                                        <!--Comment the following line out to view in editor {x:Null}-->
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Grid.Column="1" Margin="0 0 10 0" 
                            Content="+"
                            FontFamily="Roboto"
                            Click="ButtonAddDevice_OnClick" 
                            ToolTip="Add Command">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialToolbarButton}">
                                <Setter Property="IsEnabled" Value="True" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=GroupsDataGrid, Path=SelectedItem}" Value="{x:Null}">
                                        <!--Comment the following line out to view in editor {x:Null}-->
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
            </Grid>
        </Border>
    </Grid>
</UserControl>
