<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:zVirtualScenesModel="clr-namespace:zvs.DataModel;assembly=zvs.DataModel"
             xmlns:converters="clr-namespace:zvs.WPF.Converters"
             x:Class="zvs.WPF.TriggerControls.TriggerGridUc" 
             mc:Ignorable="d" 
             d:DesignHeight="489" d:DesignWidth="627" 
    Loaded="UserControl_Loaded_1" 
    Unloaded="UserControl_Unloaded_1"
    Initialized="UserControl_Initialized" FontFamily="Roboto">
    <UserControl.Resources>
        <converters:IsNewItemPlaceholderConverter x:Key="IsNewItemPlaceholderConverter"/>
        <Style x:Key="NoSelectionDataGridHeader" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Foreground"  Value="White" />
            <Setter Property="Background"  Value="{DynamicResource TriggerBrush}" />
            <Setter Property="BorderBrush"  Value="{DynamicResource TriggerSelectedBrush}" />
            <Setter Property="BorderThickness"  Value="0 0 0 1" />
            <Setter Property="FontSize"  Value="20" />
            <Setter Property="FontWeight"  Value="Medium" />
            <Setter Property="Padding"  Value="8" />
            <Setter Property="Height"  Value="60" />
        </Style>
        <Style x:Key="SelectionDataGridHeader" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Foreground"  Value="White" />
            <Setter Property="Background"  Value="{DynamicResource TriggerBrush}" />
            <Setter Property="BorderBrush"  Value="{DynamicResource TriggerSelectedBrush}" />
            <Setter Property="BorderThickness"  Value="0 0 0 1" />
            <Setter Property="FontSize"  Value="20" />
            <Setter Property="FontWeight"  Value="Medium" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Padding"  Value="8" />
            <Setter Property="Height"  Value="60" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background"  Value="{DynamicResource TriggerSelectedBrush}" />
                </Trigger>
                <Trigger Property="SortDirection" Value="Ascending">
                    <Setter Property="FontWeight"  Value="Medium" />
                </Trigger>
                <Trigger Property="SortDirection" Value="Descending">
                    <Setter Property="FontWeight"  Value="Medium" />
                </Trigger>
            </Style.Triggers>


        </Style>
        <Style x:Key="DataGridCellHozCenter"
        TargetType="{x:Type DataGridCell}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DataGridCellVerticalCenter"
        TargetType="{x:Type DataGridCell}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <CollectionViewSource x:Key="DeviceValueTriggersViewSource" d:DesignSource="{d:DesignInstance {x:Type zVirtualScenesModel:DeviceValueTrigger}, CreateList=True}"/>
    </UserControl.Resources>

    <Border Effect="{DynamicResource z-depth2}"  CornerRadius="2" DataContext="{StaticResource DeviceValueTriggersViewSource}">
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="60" />
            </Grid.RowDefinitions>

            <DataGrid x:Name="TriggerGrid" Background="#FAFAFA" RowBackground="#FAFAFA" AlternatingRowBackground="#FAFAFA"  CellStyle="{DynamicResource NoSelectDataGridCell}" CanUserDeleteRows="False" ItemsSource="{Binding}"           
                  HorizontalGridLinesBrush="{DynamicResource TriggerBrush}"  RowHeaderWidth="0" CanUserAddRows="False" 
                 GridLinesVisibility="Horizontal" RowHeight="55" AutoGenerateColumns="False" SelectionUnit="FullRow" SelectionMode="Extended"
                  HorizontalAlignment="Center" BorderThickness="0" >
                <DataGrid.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{DynamicResource TriggerSelectedColor}"/>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black"/>
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey }" Color="{DynamicResource TriggerNoFocusColor}" />
                </DataGrid.Resources>


                <DataGrid.Columns>

                    <DataGridTemplateColumn HeaderStyle="{StaticResource NoSelectionDataGridHeader}" MaxWidth="70" MinWidth="70" Width="70"  Header="" 
                                            CanUserResize="False" CanUserReorder="False" CanUserSort="False" >
                        
                        <DataGridTemplateColumn.CellTemplate >
                            <DataTemplate>
                                <Grid Height="40" Width="40">
                                    <Ellipse  Name="Ellipse" Fill="#B2B2B2"/>
                                    <TextBlock Name="imgFont" Text="&#xe002;" FontFamily="zVirtualScenes" Foreground="White" 
                                           FontSize="22" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTextColumn HeaderStyle="{StaticResource SelectionDataGridHeader}" MinWidth="200" Width="200"   Header="Name" CellStyle="{StaticResource DataGridCellVerticalCenter}" 
                                    FontSize="14" Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                <Setter  Property="Margin" Value="5,0" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>

                    </DataGridTextColumn>
                    <DataGridTextColumn Width="*" HeaderStyle="{StaticResource NoSelectionDataGridHeader}"  Header="Description" MinWidth="25" CellStyle="{StaticResource DataGridCellVerticalCenter}" FontSize="14" 
                                        IsReadOnly="True" CanUserReorder="False" CanUserSort="False" >
                        <DataGridTextColumn.Binding>
                            <MultiBinding StringFormat="{}When {0} then {1} {2}"  >
                                <Binding Path="TriggerDescription" FallbackValue="Unknow" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" />
                                <Binding Path="Description" FallbackValue="Unknow" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" />
                                <Binding Path="TargetObjectName" FallbackValue="Unknown" Mode="OneWay" UpdateSourceTrigger="PropertyChanged"/>
                            </MultiBinding>
                        </DataGridTextColumn.Binding>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}"  BasedOn="{StaticResource {x:Type TextBlock}}">
                                <Setter Property="TextWrapping" Value="NoWrap" />
                                <Setter Property="Height" Value="20" />
                                <Setter Property="TextTrimming"  Value="CharacterEllipsis"/>
                                <Setter Property="ToolTip"  Value="{Binding Path=Description, Mode=OneWay}"/>
                                <Setter Property="Padding" Value="5,0,0,0"/>
                            </Style>

                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>


                    <DataGridCheckBoxColumn HeaderStyle="{StaticResource SelectionDataGridHeader}" Header="Enabled" MinWidth="90" Width="90"  CellStyle="{StaticResource DataGridCellHozCenter}" 
                                            Binding="{Binding IsEnabled, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False" >
                    </DataGridCheckBoxColumn>

                   
                </DataGrid.Columns>
            </DataGrid>

            <Grid Background="#EEEEEE" Grid.Row="1" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>

                <Image Grid.Column="0" Name="SignalImg" Source="../Images/send_signal.png" Height="15" Margin="15 0 0 0"  VerticalAlignment="Center" HorizontalAlignment="Left" Opacity="0"/>

                <Grid Grid.Column="1"  HorizontalAlignment="Right" Margin="0 0 25 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0" HorizontalAlignment="Right" 
                            Margin="0 0 0 0" 
                            Content="&#xe001;" FontFamily="zVirtualScenes"
                            Click="AddTriggerBtn_Click" 
                            ToolTip="Add Trigger">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialToolbarButton}">
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Grid.Column="1" Margin="0 0 10 0" 
                            Content="&#xe01a;" FontFamily="zVirtualScenes"
                            Click="ButtonDelete_OnClick"
                            ToolTip="Delete Trigger">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialToolbarButton}">
                                <Setter Property="IsEnabled" Value="True" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=TriggerGrid, Path=SelectedItem}" Value="{x:Null}">
                                        <!--Comment the following line out to view in editor {x:Null}-->
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=TriggerGrid, Path=SelectedItem, Converter={StaticResource IsNewItemPlaceholderConverter}}" Value="True">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button  Grid.Column="2" Margin="0 0 0 0" 
                            Content="&#xe01f;" FontFamily="zVirtualScenes"
                            Click="SettingBtn_Click_1" 
                            ToolTip="Trigger Settings">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialToolbarButton}">
                                <Setter Property="IsEnabled" Value="True" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=TriggerGrid, Path=SelectedItem}" Value="{x:Null}">
                                        <!--Comment the following line out to view in editor {x:Null}-->
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=TriggerGrid, Path=SelectedItem, Converter={StaticResource IsNewItemPlaceholderConverter}}" Value="True">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                   
                </Grid>



            </Grid>

        </Grid>
    </Border>
</UserControl>
