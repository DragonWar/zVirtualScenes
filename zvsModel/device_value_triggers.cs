//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Collections.ObjectModel;

namespace zVirtualScenesModel
{
    
    public partial class device_value_triggers : INotifyPropertyChanged
    {
    	public event PropertyChangedEventHandler PropertyChanged;
         protected void NotifyPropertyChanged(string name)
            {
                onBeforePropertyChanged(name);
                if (PropertyChanged != null)
                {
                    PropertyChanged(this, new PropertyChangedEventArgs(name));
                }
                onAfterPropertyChanged(name);
            }
         partial void onBeforePropertyChanged(string name);
         partial void onAfterPropertyChanged(string name);
    
    
    	private int _id;
        public int id {
    		get { 
    			return _id;
    		} 
    		set {
    			if (value != _id){
    				_id = value;
    			    NotifyPropertyChanged("id");
    			}
    		}
    	 }
    
    	private int _device_value_id;
        public int device_value_id {
    		get { 
    			return _device_value_id;
    		} 
    		set {
    			if (value != _device_value_id){
    				_device_value_id = value;
    			    NotifyPropertyChanged("device_value_id");
    			}
    		}
    	 }
    
    	private Nullable<int> _trigger_operator;
        public Nullable<int> trigger_operator {
    		get { 
    			return _trigger_operator;
    		} 
    		set {
    			if (value != _trigger_operator){
    				_trigger_operator = value;
    			    NotifyPropertyChanged("trigger_operator");
    			}
    		}
    	 }
    
    	private string _trigger_value;
        public string trigger_value {
    		get { 
    			return _trigger_value;
    		} 
    		set {
    			if (value != _trigger_value){
    				_trigger_value = value;
    			    NotifyPropertyChanged("trigger_value");
    			}
    		}
    	 }
    
    	private bool _enabled;
        public bool enabled {
    		get { 
    			return _enabled;
    		} 
    		set {
    			if (value != _enabled){
    				_enabled = value;
    			    NotifyPropertyChanged("enabled");
    			}
    		}
    	 }
    
    	private string _Name;
        public string Name {
    		get { 
    			return _Name;
    		} 
    		set {
    			if (value != _Name){
    				_Name = value;
    			    NotifyPropertyChanged("Name");
    			}
    		}
    	 }
    
    	private Nullable<int> _scene_id;
        public Nullable<int> scene_id {
    		get { 
    			return _scene_id;
    		} 
    		set {
    			if (value != _scene_id){
    				_scene_id = value;
    			    NotifyPropertyChanged("scene_id");
    			}
    		}
    	 }
    
    	private int _trigger_type;
        public int trigger_type {
    		get { 
    			return _trigger_type;
    		} 
    		set {
    			if (value != _trigger_type){
    				_trigger_type = value;
    			    NotifyPropertyChanged("trigger_type");
    			}
    		}
    	 }
    
    	private string _trigger_script;
        public string trigger_script {
    		get { 
    			return _trigger_script;
    		} 
    		set {
    			if (value != _trigger_script){
    				_trigger_script = value;
    			    NotifyPropertyChanged("trigger_script");
    			}
    		}
    	 }
    
    
    	private device_values _device_values;
        public virtual device_values device_values {
    		get { 
    			return _device_values;
    		} 
    		set {
    			if (value != _device_values){
    				_device_values = value;
    			    NotifyPropertyChanged("device_values");
    			}
    		}
    	 }
    
    	private scene _scene;
        public virtual scene scene {
    		get { 
    			return _scene;
    		} 
    		set {
    			if (value != _scene){
    				_scene = value;
    			    NotifyPropertyChanged("scene");
    			}
    		}
    	 }
    }
}
