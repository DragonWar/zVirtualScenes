//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Collections.ObjectModel;

namespace zVirtualScenesModel
{
    
    public partial class db_info : INotifyPropertyChanged
    {
    	public event PropertyChangedEventHandler PropertyChanged;
        protected void NotifyPropertyChanged(string name)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(name));
            }
        }
    
    
    	private int _id;
        public int id {
    		get { 
    			return _id;
    		} 
    		set {
    			if (value != _id){
    			    int old = _id;
    				BeforeidChange(old, value);
    				_id = value;
    			    NotifyPropertyChanged("id");
    				AfteridChange(old, value);
    			}
    		}
    	 } 
    
    	partial void BeforeidChange(int oldValue, int newValue);
    	partial void AfteridChange(int oldValue, int newValue);
    
    	private string _info_name;
        public string info_name {
    		get { 
    			return _info_name;
    		} 
    		set {
    			if (value != _info_name){
    			    string old = _info_name;
    				Beforeinfo_nameChange(old, value);
    				_info_name = value;
    			    NotifyPropertyChanged("info_name");
    				Afterinfo_nameChange(old, value);
    			}
    		}
    	 } 
    
    	partial void Beforeinfo_nameChange(string oldValue, string newValue);
    	partial void Afterinfo_nameChange(string oldValue, string newValue);
    
    	private string _info_value;
        public string info_value {
    		get { 
    			return _info_value;
    		} 
    		set {
    			if (value != _info_value){
    			    string old = _info_value;
    				Beforeinfo_valueChange(old, value);
    				_info_value = value;
    			    NotifyPropertyChanged("info_value");
    				Afterinfo_valueChange(old, value);
    			}
    		}
    	 } 
    
    	partial void Beforeinfo_valueChange(string oldValue, string newValue);
    	partial void Afterinfo_valueChange(string oldValue, string newValue);
    }
}
