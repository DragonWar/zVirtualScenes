//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Collections.ObjectModel;

namespace zVirtualScenesModel
{
    
    public partial class device_command_options : INotifyPropertyChanged
    {
    	public event PropertyChangedEventHandler PropertyChanged;
        protected void NotifyPropertyChanged(string name)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(name));
            }
        }
    
    
    	private int _id;
        public int id {
    		get { 
    			return _id;
    		} 
    		set {
    			if (value != _id){
    			    int old = _id;
    				BeforeidChange(old, value);
    				_id = value;
    			    NotifyPropertyChanged("id");
    				AfteridChange(old, value);
    			}
    		}
    	 } 
    
    	partial void BeforeidChange(int oldValue, int newValue);
    	partial void AfteridChange(int oldValue, int newValue);
    
    	private int _device_command_id;
        public int device_command_id {
    		get { 
    			return _device_command_id;
    		} 
    		set {
    			if (value != _device_command_id){
    			    int old = _device_command_id;
    				Beforedevice_command_idChange(old, value);
    				_device_command_id = value;
    			    NotifyPropertyChanged("device_command_id");
    				Afterdevice_command_idChange(old, value);
    			}
    		}
    	 } 
    
    	partial void Beforedevice_command_idChange(int oldValue, int newValue);
    	partial void Afterdevice_command_idChange(int oldValue, int newValue);
    
    	private string _name;
        public string name {
    		get { 
    			return _name;
    		} 
    		set {
    			if (value != _name){
    			    string old = _name;
    				BeforenameChange(old, value);
    				_name = value;
    			    NotifyPropertyChanged("name");
    				AfternameChange(old, value);
    			}
    		}
    	 } 
    
    	partial void BeforenameChange(string oldValue, string newValue);
    	partial void AfternameChange(string oldValue, string newValue);
    
    
    	private device_commands _device_commands;
        public virtual device_commands device_commands {
    		get { 
    			return _device_commands;
    		} 
    		set {
    			if (value != _device_commands){
    			    device_commands old = _device_commands;
    				Beforedevice_commandsChange(old, value);
    				_device_commands = value;
    			    NotifyPropertyChanged("device_commands");
    				Afterdevice_commandsChange(old, value);
    			}
    		}
    	 } 
    
    	partial void Beforedevice_commandsChange(device_commands oldValue, device_commands newValue);
    	partial void Afterdevice_commandsChange(device_commands oldValue, device_commands newValue);
    }
}
