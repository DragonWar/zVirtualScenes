//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Collections.ObjectModel;

namespace zVirtualScenesModel
{
    
    public partial class javascript_triggers : INotifyPropertyChanged
    {
    	public event PropertyChangedEventHandler PropertyChanged;
        protected void NotifyPropertyChanged(string name)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(name));
            }
        }
    
    
    	private int _id;
        public int id {
    		get { 
    			return _id;
    		} 
    		set {
    			if (value != _id){
    			    int old = _id;
    				BeforeidChange(old, value);
    				_id = value;
    			    NotifyPropertyChanged("id");
    				AfteridChange(old, value);
    			}
    		}
    	 } 
    
    	partial void BeforeidChange(int oldValue, int newValue);
    	partial void AfteridChange(int oldValue, int newValue);
    
    	private string _Name;
        public string Name {
    		get { 
    			return _Name;
    		} 
    		set {
    			if (value != _Name){
    			    string old = _Name;
    				BeforeNameChange(old, value);
    				_Name = value;
    			    NotifyPropertyChanged("Name");
    				AfterNameChange(old, value);
    			}
    		}
    	 } 
    
    	partial void BeforeNameChange(string oldValue, string newValue);
    	partial void AfterNameChange(string oldValue, string newValue);
    
    	private string _Script;
        public string Script {
    		get { 
    			return _Script;
    		} 
    		set {
    			if (value != _Script){
    			    string old = _Script;
    				BeforeScriptChange(old, value);
    				_Script = value;
    			    NotifyPropertyChanged("Script");
    				AfterScriptChange(old, value);
    			}
    		}
    	 } 
    
    	partial void BeforeScriptChange(string oldValue, string newValue);
    	partial void AfterScriptChange(string oldValue, string newValue);
    
    	private bool _isEnabled;
        public bool isEnabled {
    		get { 
    			return _isEnabled;
    		} 
    		set {
    			if (value != _isEnabled){
    			    bool old = _isEnabled;
    				BeforeisEnabledChange(old, value);
    				_isEnabled = value;
    			    NotifyPropertyChanged("isEnabled");
    				AfterisEnabledChange(old, value);
    			}
    		}
    	 } 
    
    	partial void BeforeisEnabledChange(bool oldValue, bool newValue);
    	partial void AfterisEnabledChange(bool oldValue, bool newValue);
    }
}
